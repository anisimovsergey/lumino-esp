#include "StatusCode.hpp"

using namespace Core;

const StatusCode StatusCode::Continue = StatusCode(100, "Continue");
const StatusCode StatusCode::SwitchingProtocols = StatusCode(101, "SwitchingProtocols");
const StatusCode StatusCode::OK = StatusCode(200, "OK");
const StatusCode StatusCode::Created = StatusCode(201, "Created");
const StatusCode StatusCode::Accepted = StatusCode(202, "Accepted");
const StatusCode StatusCode::NonAuthoritativeInformation = StatusCode(203, "NonAuthoritativeInformation");
const StatusCode StatusCode::NoContent = StatusCode(204, "NoContent");
const StatusCode StatusCode::ResetContent = StatusCode(205, "ResetContent");
const StatusCode StatusCode::PartialContent = StatusCode(206, "PartialContent");
const StatusCode StatusCode::MultipleChoices = StatusCode(300, "MultipleChoices");
const StatusCode StatusCode::Ambiguous = StatusCode(300, "Ambiguous");
const StatusCode StatusCode::MovedPermanently = StatusCode(301, "MovedPermanently");
const StatusCode StatusCode::Moved = StatusCode(301, "Moved");
const StatusCode StatusCode::Found = StatusCode(302, "Found");
const StatusCode StatusCode::Redirect = StatusCode(302, "Redirect");
const StatusCode StatusCode::SeeOther = StatusCode(303, "SeeOther");
const StatusCode StatusCode::RedirectMethod = StatusCode(303, "RedirectMethod");
const StatusCode StatusCode::NotModified = StatusCode(304, "NotModified");
const StatusCode StatusCode::UseProxy = StatusCode(305, "UseProxy");
const StatusCode StatusCode::Unused = StatusCode(306, "Unused");
const StatusCode StatusCode::RedirectKeepVerb = StatusCode(307, "RedirectKeepVerb");
const StatusCode StatusCode::TemporaryRedirect = StatusCode(307, "TemporaryRedirect");
const StatusCode StatusCode::BadRequest = StatusCode(400, "BadRequest");
const StatusCode StatusCode::Unauthorized = StatusCode(401, "Unauthorized");
const StatusCode StatusCode::PaymentRequired = StatusCode(402, "PaymentRequired");
const StatusCode StatusCode::Forbidden = StatusCode(403, "Forbidden");
const StatusCode StatusCode::NotFound = StatusCode(404, "NotFound");
const StatusCode StatusCode::MethodNotAllowed = StatusCode(405, "MethodNotAllowed");
const StatusCode StatusCode::NotAcceptable = StatusCode(406, "NotAcceptable");
const StatusCode StatusCode::ProxyAuthenticationRequired = StatusCode(407, "ProxyAuthenticationRequired");
const StatusCode StatusCode::RequestTimeout = StatusCode(408, "RequestTimeout");
const StatusCode StatusCode::Conflict = StatusCode(409, "Conflict");
const StatusCode StatusCode::Gone = StatusCode(410, "Gone");
const StatusCode StatusCode::LengthRequired = StatusCode(411, "LengthRequired");
const StatusCode StatusCode::PreconditionFailed = StatusCode(412, "PreconditionFailed");
const StatusCode StatusCode::RequestEntityTooLarge = StatusCode(413, "RequestEntityTooLarge");
const StatusCode StatusCode::RequestUriTooLong = StatusCode(414, "RequestUriTooLong");
const StatusCode StatusCode::UnsupportedMediaType = StatusCode(415, "UnsupportedMediaType");
const StatusCode StatusCode::RequestedRangeNotSatisfiable = StatusCode(416, "RequestedRangeNotSatisfiable");
const StatusCode StatusCode::ExpectationFailed = StatusCode(417, "ExpectationFailed");
const StatusCode StatusCode::UpgradeRequired = StatusCode(426, "UpgradeRequired");
const StatusCode StatusCode::InternalServerError = StatusCode(500, "InternalServerError");
const StatusCode StatusCode::NotImplemented = StatusCode(501, "NotImplemented");
const StatusCode StatusCode::BadGateway = StatusCode(502, "BadGateway");
const StatusCode StatusCode::ServiceUnavailable = StatusCode(503, "ServiceUnavailable");
const StatusCode StatusCode::GatewayTimeout = StatusCode(504, "GatewayTimeout");
const StatusCode StatusCode::HttpVersionNotSupported = StatusCode(505, "HttpVersionNotSupported");
